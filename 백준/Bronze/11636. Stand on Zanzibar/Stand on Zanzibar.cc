/*
스탠드 온 잔지바르
 
시간 제한 메모리 제한 
1 초 256 MB 

문제
거북이는 오래 살고 번성합니다. 잔지바르 섬의 거북이는 심지어 불멸의 존재입니다. 
게다가 무성생식 동물로 매년 최대 한 마리만 새끼를 낳습니다. 그 외에는 아무것도 하지 않습니다. 
그들은 열대 낙원을 떠나지 않습니다.

잔지바르 최초의 거북인 잔지바는 섬에 있는 거북의 개체 수를 추적하는 또 다른 활동을 합니다. 
매년 새해가 되면 거북이의 수를 세고 작은 책자에 총 수를 기록합니다. 
수년이 지나면 이 책자에는 하나 이상의 정수로 시작하여 감소하지 않는 정수의 시퀀스가 포함됩니다. 
(잔지바르의 아름다운 해변에서 알에서 깨어난 잔지는 스스로 가족을 꾸리기까지 시간이 좀 걸렸습니다.) 
잔지는 그 후에도 가족을 꾸려나갑니다.

어느 날 잔지는 외국에서 배나 비행기를 타고 잔지바르로 오는 거북이도 있을 수 있다는 사실을 깨닫습니다. 
이제 잔지는 잔지바르에서 태어나지 않은 주민들이 얼마나 많은지 궁금해합니다. 
안타깝게도 책자의 순서에서 하한선을 도출할 수 있을 뿐입니다. 
실제로 한 해의 거북이 수가 전년도보다 두 배 이상 많다면 그 차이는 수입으로 완전히 설명되어야합니다.

잔지바르에 거북이가 1,000,000마리가 되면 섬 전체가 거북이로 뒤덮이고 번식과 수입이 모두 중단됩니다. 
잔지를 도와주세요! 위에서 설명한 수열이 주어졌을 때, 수입 거북이의 하한을 계산하는 프로그램을 작성하세요.

입력
입력은 테스트 케이스의 수인 정수 T가 포함된 한 줄로 시작합니다. 그런 다음 각 테스트 케이스에 대해

하나 이상의 공백으로 구분된 양의 정수(≤ 1,000,000), 감소하지 않는 정수의 시퀀스가 포함된 한 줄로 시작됩니다. 
편의상 시퀀스의 끝에는 공백 한 개와 0이 추가됩니다.

출력
각 테스트 케이스에 대해 잔지바르에서 태어나지 않은 거북이 수의 하한인 정수를 한 줄로 출력합니다.

예제 입력 1 
3
1 100 0
1 1 1 2 2 4 8 8 9 0
1 28 72 0
예제 출력 1 
98
0
42

Translated with DeepL.com (free version)
*/

#include <bits/stdc++.h>

using namespace std;

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int T;
    cin >> T;

    while (T--)
    {
        int n, cnt = 0, prev = 1;
        while (1)
        {
            cin >> n;
            if (n == 0)
                break;
            if (n > 2 * prev)
                cnt += n - 2 * prev;
            prev = n;
        }
        cout << cnt << "\n";
    }

    return 0;
}
