/*
환전
 
시간 제한 메모리 제한
1 초 128 MB 

문제
아이작 버난드 밀러는 프랑스와 같은 다른 나라로 여행을 갈 때 미국 달러를 프랑스 프랑으로 환전합니다. 환율은 달러 수를 곱하면 프랑 수를 알 수 있는 실수입니다. 예를 들어 미국 달러와 프랑스 프랑의 환율이 4.81724인 경우 10달러는 48.1724프랑으로 교환됩니다. 물론 100분의 1프랑만 받을 수 있으므로 실제 받는 금액은 가장 가까운 100분의 1로 반올림됩니다. (0.005는 0.01까지 반올림합니다.) 두 국가 간의 모든 환전 금액은 가장 가까운 100분의 1로 반올림됩니다.

때때로 Issac은 여행을 통해 여러 나라를 방문하고 한 외국의 돈을 다른 나라의 돈으로 환전합니다. 마침내 집에 도착하면 그는 환전한 돈을 미국 달러로 다시 환전합니다. 아이작은 이 환전소에서 사용하지 않은 미국 달러가 얼마나 손실될지(또는 얼마나 이득이 될지!) 생각하게 됩니다. 아이작이 여러 번 환전하면 결국 얼마나 많은 돈을 갖게 되는지 계산해 보겠습니다. 항상 미국 달러로 시작해서 항상 미국 달러로 끝납니다.

입력
처음 5줄은 1번부터 5번까지 5개 국가의 환율을 입력합니다. I번째 줄은 I국가에서 5개 국가로의 환율을 5개로 나눕니다. 따라서 i번째 줄의 j번째 항목은 i국 통화에서 j국 통화로의 환율을 나타내며, i국 자체에 대한 환율은 항상 1이 되고 1번째 국가는 미국이 됩니다. 다음 각 줄은 여행을 나타내며 다음과 같은 형식입니다.

N c1 c2 ... cn m

여기서 1 <= n <= 10이고 c1, ..., cn은 2에서 5까지의 정수로 Issac이 국가를 방문하는 순서를 나타냅니다. (n = 0의 값은 입력이 끝났음을 나타내며, 이 경우 줄에 더 이상 숫자가 없습니다.) 따라서 그의 여행은 1 -> c1 -> c2 -> ... -> cn -> 1이 되고, 실수 m은 여행 시작 시점의 달러 금액이 됩니다.

출력
각 여행은 여행을 마치고 집으로 돌아갈 때 미화 금액을 한 줄의 출력으로 생성합니다. 금액은 가장 가까운 센트 단위로 표시되어야 하며, 샘플 출력과 같이 소수점 오른쪽에 센트를 표시하는 일반적인 형식으로 표시되어야 합니다. 금액이 1달러 미만인 경우에는 달러 자리에 0을 표시해야 합니다.

예제 입력 1 
1 1.57556 1.10521 0.691426 7.25005
0.634602 1 0.701196 0.43856 4.59847
0.904750 1.42647 1 0.625627 6.55957
1.44616 2.28059 1.59840 1 10.4843
0.137931 0.217555 0.152449 0.0953772 1
3 2 4 5 20.00
1 3 100.00
6 2 3 4 2 4 3 120.03
0
예제 출력 1
19.98
99.99
120.01
*/

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int main(){
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    long double rate[6][6];

    for(int i=1;i<=5;i++){
        for(int j=1;j<=5;j++){
            cin>>rate[i][j];
        }
    }

    while(true){
        int n;
        if(!(cin>>n)) return 0;
        if(n==0) break;
        vector<int> seq(n+2);
        seq[0] = 1;
        for(int i=1;i<=n;i++) cin>>seq[i];
        seq[n+1] = 1;
        string mstr;
        cin>>mstr;

        ll amount = 0;
        size_t pos = mstr.find('.');

        if(pos==string::npos){
            amount = stoll(mstr) * 100;
        } else {
            string d = mstr.substr(0,pos);
            string c = mstr.substr(pos+1);
            if(c.size()==1) c.push_back('0');
            else if(c.size()>2) c = c.substr(0,2);
            amount = stoll(d) * 100 + stoll(c);
        }

        for(int i=0;i+1<seq.size();i++){
            int u = seq[i], v = seq[i+1];
            long double x = amount * rate[u][v];
            ll nc = (ll)floor(x + 0.5L);
            amount = nc;
        }

        ll dollars = amount / 100;
        ll cents = amount % 100;
        cout<<dollars<<"."<<setw(2)<<setfill('0')<<cents<<"\n";
    }
    return 0;
}
