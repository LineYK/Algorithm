/*
알파벳 블록
 
시간 제한	메모리 제한
1 초	512 MB

문제
스타는 알파벳 블록을 일렬로 조립하여 문자열을 만드는 게임을 만들었다. 
각 블록에는 문자 하나가 적혀 있으며 게임에는 각각 다음 기능을 수행하는 세 개의 버튼이 있다.

문자열 맨 뒤에 블록 추가
문자열 맨 앞에 블록 추가
문자열을 구성하는 블록 중 가장 나중에 추가된 블록 제거

게임은 처음에 빈 문자열로 시작하며 빈 문자열일 때 
문자열을 구성하는 블록 중 가장 나중에 추가된 블록을 제거하는 버튼을 누를 경우 아무런 동작도 하지 않는다. 
버튼을 누른 횟수와 누른 버튼이 순서대로 주어질 때 완성된 문자열을 구하여라.

입력
첫째 줄에 버튼을 누른 횟수 $N$이 주어진다. $(1 \leq N \leq 1\,000\,000)$ 

둘째 줄부터 $N$개의 줄에는 버튼을 누른 순서대로 누른 버튼에 대한 정보를 주며 아래와 같은 형식으로 주어진다.

1 c : 문자열 맨 뒤에 c가 적힌 블록 추가
2 c : 문자열 맨 앞에 c가 적힌 블록 추가
3 : 문자열을 구성하는 블록 중 가장 나중에 추가된 블록 제거
c는 알파벳 대문자 또는 소문자로 주어진다.

출력
완성된 문자열을 출력한다. 완성된 문자열이 빈 문자열인 경우 0을 출력한다.

예제 입력 1 
5
1 a
2 b
1 c
3
3
예제 출력 1 
a
버튼을 한 번 눌렀을 때, 문자열은 “a”가 된다.
버튼을 두 번 눌렀을 때, 문자열은 “ba”가 된다.
버튼을 세 번 눌렀을 때, 문자열은 “bac”가 된다.
버튼을 네 번 눌렀을 때, 가장 나중에 추가된 블록이 제거되어 문자열은 “ba”가 된다.
버튼을 다섯 번 눌렀을 때, 가장 나중에 추가된 블록이 제거되어 문자열은 “a”가 된다.

예제 입력 2 
9
1 c
2 n
1 h
1 o
2 i
1 R
3
2 S
1 n
예제 출력 2 
Sinchon

예제 입력 3 
7
2 Y
3
1 R
3
3
2 n
2 O
예제 출력 3 
On
예제 입력 4 
11
1 u
3
2 z
3
1 s
2 A
3
1 a
3
3
3
예제 출력 4 
0
*/

#include <bits/stdc++.h>
using namespace std;

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    int N;
    cin >> N;

    deque<char> dq;
    stack<bool> st;

    for (int i = 0; i < N; i++)
    {
        int a;
        char b;
        cin >> a;
        if (a == 1)
        {
            cin >> b;
            dq.push_back(b);
            st.push(1);
        }
        else if (a == 2)
        {
            cin >> b;
            dq.push_front(b);
            st.push(0);
        }
        else
        {
            if (!dq.empty())
            {
                st.top() ? dq.pop_back() : dq.pop_front();
                st.pop();
            }
            
        }
    }

    if (dq.empty())
    {
        cout << 0;
        return 0;
    }

    while (!dq.empty())
    {
        cout << dq.front();
        dq.pop_front();
    }

    
    return 0;
}