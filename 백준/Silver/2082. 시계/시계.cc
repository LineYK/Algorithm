/*
시계

시간 제한	메모리 제한
2 초	128 MB

문제
코레스코 콘도의 각 방에는 디지털 시계가 설치되어 있다. 디지털 시계에는 4개의 숫자가 표현될 수 있으며, 이것은 'hh:mm'의 형식으로 시간을 표현한다. 즉, 앞의 두 자리는 시간을, 뒤의 두 자리는 분을 표현한다. 시간은 00:00부터 23:59까지의 24시 체계를 쓴다.

디지털 시계의 각 숫자는 15개의 발광다이오드로 표현이 된다. 5x3형태로 배열되어 있는 발광 다이오드들 중 특정한 몇 칸이 켜져서 숫자를 나타내는 것이다. 다음과 같다. '#'은 불이 켜져 있는 다이오드를, '.'은 그렇지 않은 다이오드를 나타낸다.

###  ..#  ###  ###  #.#  ###  ###  ###  ###  ###
#.#  ..#  ..#  ..#  #.#  #..  #..  ..#  #.#  #.#
#.#  ..#  ###  ###  ###  ###  ###  ..#  ###  ###
#.#  ..#  #..  ..#  ..#  ..#  #.#  ..#  #.#  ..#
###  ..#  ###  ###  ..#  ###  ###  ..#  ###  ###
그런데 투숙객이 아침에 일어나서 시계를 보니 몇 개의 발광다이오드가 고장나 불이 켜지지 않은 것을 발견했다. (켜지지 않아야 하는 발광다이오드가 켜진 경우는 없다)모든 투숙객은 자신이 부지런하고 믿는 사람들이기 때문에 투숙객은 가능하면 현재 시각을 빠른 시각(00:00에 가까운 시각이 늘 빠른 시각이다)으로 생각하고 싶다.

일부 발광다이오드가 고장난 디지털 시계의 네 숫자가 주어졌을 때, 이러한 배치가 가능한 가장 빠른 시각을 구하는 프로그램을 작성하시오.

입력
각 줄에는 15개의 문자가 다음과 같이 주어진다. 네 번째 문자마다 공백이 한 칸씩 주어지고, 그 외에는 '#' 또는 '.'이 주어진다. 입력되는 순서는 시계의 배치된 순서와 같다.

출력
이러한 배치가 가능한 가장 빠른 시각을 출력한다.

예제 입력 1
#.# ... ... #..
#.# ... ... #..
#.# ### ### ###
#.# #.. ..# ..#
### ### ### ..#
예제 출력 1
02:34
예제 입력 2
### ### ..# ...
... #.# #.# #.#
### #.# .#. .#.
#.. #.# ..# ..#
### #.# ..# ###
예제 출력 2
20:48
예제 입력 3
#.. #.# #.# .#.
..# #.. ... #..
#.# .## ### .##
..# #.# ... ...
#.# ### ##. ###
예제 출력 3
06:25
*/

#include <bits/stdc++.h>
using namespace std;

vector<array<string, 5>> pat = {
    array<string,5>{ "###", "#.#", "#.#", "#.#", "###" }, // 0
    array<string,5>{ "..#", "..#", "..#", "..#", "..#" }, // 1
    array<string,5>{ "###", "..#", "###", "#..", "###" }, // 2
    array<string,5>{ "###", "..#", "###", "..#", "###" }, // 3
    array<string,5>{ "#.#", "#.#", "###", "..#", "..#" }, // 4
    array<string,5>{ "###", "#..", "###", "..#", "###" }, // 5
    array<string,5>{ "###", "#..", "###", "#.#", "###" }, // 6
    array<string,5>{ "###", "..#", "..#", "..#", "..#" }, // 7
    array<string,5>{ "###", "#.#", "###", "#.#", "###" }, // 8
    array<string,5>{ "###", "#.#", "###", "..#", "###" }  // 9
};


int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    char obs[4][5][3];
    for (int r = 0; r < 5; r++) {
        for (int d = 0; d < 4; d++) {
            string s;
            cin >> s;
            for (int c = 0; c < 3; c++) {
                obs[d][r][c] = s[c];
            }
        }
    }

    for (int h = 0; h < 24; h++) {
        for (int m = 0; m < 60; m++) {
            int D[4] = { h / 10, h % 10, m / 10, m % 10 };
            bool ok = true;

            for (int d = 0; d < 4 && ok; d++) {
                for (int r = 0; r < 5 && ok; r++) {
                    for (int c = 0; c < 3; c++) {
                        if (obs[d][r][c] == '#' && pat[D[d]][r][c] == '.') {
                            ok = false;
                            break;
                        }
                    }
                }
            }

            if (ok) {
                cout << setw(2) << setfill('0') << h
                    << ":"
                    << setw(2) << setfill('0') << m
                    << "\n";
                return 0;
            }
        }
    }

    return 0;
}
