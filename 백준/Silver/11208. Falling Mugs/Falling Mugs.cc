/*
떨어지는 머그잔
 
시간 제한 메모리 제한
1초 256MB	

문제
수잔은 떨어지는 커피잔을 고속으로 촬영하는 동영상을 만들고 있습니다. 
수잔은 동영상을 분석할 때 머그잔의 크기를 알고 싶지만, 안타깝게도 촬영 중에 머그잔이 모두 파손되었습니다. 
하지만 수잔은 물리학을 어느 정도 알고 있었기 때문에 
머그잔이 다른 비디오 프레임 사이에서 얼마나 멀리 이동했는지 알아냈습니다. 
카메라는 초당 70프레임의 속도로 촬영하고 있었으므로 
머그잔이 놓인 시점부터 계산한 프레임 n에서 머그잔이 이동한 밀리미터 수는 d = n^2입니다. 
프레임 카운트는 0에서 시작합니다.

수잔은 특정 머그잔의 높이가 D밀리미터라고 생각하지만, 
이를 확인하려면 머그잔이 정확히 이 거리만큼 이동한 두 프레임을 찾아야 합니다. 수잔을 도와줄 수 있나요?

입력
입력 파일에는 측정할 거리인 단일 양의 정수 D ≤ 200,000이 들어 있습니다.

출력
수잔이 비교해야 하는 프레임의 수인 두 개의 음이 아닌 정수 n1과 n2를 출력합니다. 
두 정수는 n2^2 - n1^2 = D를 충족해야 합니다. 이러한 정수가 두 개 없으면 대신 “impossible”을 출력합니다.

예제 입력 1 
88
예제 출력 1 
9 13
예제 입력 2 
86
예제 출력 2 
impossible
*/

#include <bits/stdc++.h>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int D;
    cin >> D;

    int ans_n1, ans_n2;

    for (int a = 1; (long long)a * a <= D; a++) {
        if (D % a == 0) { 
            int b = D / a;
            if (a % 2 == b % 2) {
                int n1 = (b - a) / 2;
                int n2 = (a + b) / 2;
                ans_n1 = n1;
                ans_n2 = n2;
                cout << ans_n1 << " " << ans_n2 << endl;
                return 0;
            }
        }
    }

    cout << "impossible" << endl;

    return 0;
}