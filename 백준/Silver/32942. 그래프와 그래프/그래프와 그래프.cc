/*
그래프와 그래프

시간 제한	메모리 제한
1 초	1024 MB

문제
대곽이는 정보 수업 시간에 그래프를 배운다는 이야기를 듣고 미리 예습해 가기로 하였다. 하지만 대곽이는 그래프 이론이 아닌 좌표평면에서의 그래프를 공부해 버렸다.

대곽이는
Ax + By = C라는 방정식으로 주어진 직선의 그래프를 좌표평면에 그렸다. 대곽이는 이 그래프를 정점과 간선으로 이루어진 방향 그래프로 바꾸려고 한다. 정점은 총
10개이며, 각 정점에는
1부터
10까지의 서로 다른 정수 번호가 붙어 있다. 처음에는 그래프에 간선이 존재하지 않는다.
1 이상
10 이하인 두 정수
x,
y에 대하여 좌표평면상에서 직선의 그래프가 점
(x, y)를 지난다면 대곽이는 그래프의
x번 정점에서
y번 정점으로 향하는 간선을 정확히 하나 추가한다. 그래프에서 시작점과 끝점이 같은 간선도 추가할 수 있다.

대곽이가 위의 과정을 거쳐서 만든 새로운 그래프를 출력해 보자!

입력
입력의 첫째 줄에 방정식
Ax+By=C의 계수
A,
B,
C가 공백으로 구분되어 주어진다.
(-100\, 000 \le A,B,C \le 100\, 000) 

 
A,
B,
C는 정수이며,  
A와
B가 모두
0인 경우는 주어지지 않는다.

출력
총
10개의 줄을 출력한다.
i번째 줄에는
i번 정점에서 간선을 정확히
1개 지나서 도착할 수 있는 정점들의 번호를 공백으로 구분하여 오름차순으로 출력한다. 만약 그런 정점이 없다면 그 대신 0을 출력한다.

예제 입력 1
1 1 5
예제 출력 1
4
3
2
1
0
0
0
0
0
0
다음 그림은 예제 입력
1의 두 종류의 그래프를 나타낸 것이다.



예제 입력 2
2 0 4
예제 출력 2
0
1 2 3 4 5 6 7 8 9 10
0
0
0
0
0
0
0
0
*/

#include <bits/stdc++.h>
using namespace std;

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    int A, B, C;
    cin >> A >> B >> C;

    for (int i = 1; i <= 10; i++)
    {
        bool found = false;
        for (int j = 1; j <= 10; j++)
        {
            if (A * i + B * j == C)
            {
                cout << j << " ";
                found = true;
            }
        }
        if (!found) {
            cout << "0";
        }

        cout << "\n";
    }
    return 0;
}