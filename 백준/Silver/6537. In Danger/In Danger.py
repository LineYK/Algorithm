"""
위험 속

시간 제한    메모리 제한
1 초    128 MB    

문제
플라비우스 요세푸스와 40명의 동료 반란군이 로마군에 포위되었습니다. 
그의 동료들은 항복보다 자살을 선택하기로 하고, 
원을 만들어 세 번째 사람마다 죽이며 원을 돌다가 마지막 한 명만 남을 때까지 진행하기로 했습니다. 
요세푸스는 자살하는 생각에 흥분하지 않았기에, 자신이 마지막으로 살아남을 위치를 계산했다
(그리고 아무도 지켜보지 못할 테니 자살하지 않았다).

우리는 이 “게임”의 변형 버전을 고려할 것이다. 
여기서 두 번째 사람마다 떠난다. 물론 컴퓨터가 있으니 41명 이상이 될 것이다. 
당신은 안전한 위치를 계산해야 한다. 주의하라! 당신의 프로그램을 이 대회의 승자를 계산하는 데 사용할 수도 있다!

입력
입력에는 여러 테스트 케이스가 포함됩니다. 
각 케이스는 게임에 참여하는 사람 수 n을 나타냅니다. 
난이도를 높이기 위해 항상 “xyez” 형식으로 주어지며, 
그 의미는 다음과 같습니다: n을 십진수로 표기했을 때 
첫 번째 자리는 x, 두 번째 자리는 y, 그 뒤로 z개의 0이 이어집니다. 
0<=x,y<=9이며, 0의 개수는 0<=z<=6입니다. n>0이라고 가정해도 됩니다. 
마지막 테스트 케이스 뒤에는 문자열 00e0이 따라옵니다.

출력
각 테스트 케이스에 대해 생존한 사람의 위치를 한 줄에 출력하십시오. 
참가자들은 1부터 n까지의 일련번호를 가지며, 카운팅은 1번 참가자부터 시작합니다. 
즉, 가장 먼저 떠나는 사람은 번호 2를 가진 사람입니다. 
예를 들어, 원 안에 5명의 사람이 있다면 카운팅은 2, 4, 1, 5 순으로 진행되며 3번 참가자가 생존합니다.

예제 입력 1 
05e0
01e1
42e0
66e6
00e0
예제 출력 1 
3
5
21
64891137
"""

import sys
input = sys.stdin.readline

def josephus_k2(n: int) -> int:
    m = 1 << (n.bit_length() - 1)
    l = n - m
    return (l << 1) + 1

for line in sys.stdin:
    s = line.strip()
    if not s:
        continue
    if s == "00e0":
        break
    a = int(s[:2])
    z = int(s[3:])
    n = a * (10 ** z)
    print(josephus_k2(n))
