/*
카드 교환
 
시간 제한	메모리 제한
1 초	1024 MB	

문제
인하대학교 축제가 열리면, 인천 최대 규모의 카지노인 인하 카지노도 함께 문을 연다. 
손님들의 더 많은 유입을 원했던 인하 카지노는 모두가 즐길 수 있는 새로운 카드 게임을 만들었다. 새로운 카드 게임의 진행 방식은 다음과 같다.

딜러와 플레이어는 각각 1부터 N까지의 정수가 적힌 카드를 한 장씩 받는다. 
딜러는 아무것도 적혀있지 않은 더미 카드 한 장을 추가로 받는다. 
그리고 플레이어는 가진 점수가 0인 상태에서 게임을 시작하여 턴을 M회 수행한다. 각 턴은 아래와 같은 순서대로 진행된다.

플레이어가 딜러의 패에서 원하는 카드를 하나 가져온다.
플레이어의 패에서 같은 값을 가진 카드 쌍이 만들어진 경우, 그 카드 쌍은 패에서 제거된다. 그리고 해당 카드 쌍에 적힌 값이 i라면 플레이어는 A_i점을 얻는다. 얻는 점수가 음수일 수 있으며, 플레이어의 점수도 음수가 될 수 있다.
플레이어가 딜러에게 자신의 패에서 원하는 카드를 하나 준다.
딜러의 패에서 같은 값을 가진 카드 쌍이 만들어진 경우 그 카드 쌍은 패에서 제거된다. 이 경우 플레이어는 점수를 얻지 못한다.
M번째 턴을 끝내거나 더미 카드를 제외한 모든 카드 쌍이 사라진 순간 게임이 종료된다. 즉, 턴이 수행되는 도중이라도 플레이어가 딜러에게 카드를 줄 수 없다면 게임이 즉시 종료된다.

이 카드 게임에서 게임이 종료되었을 때 플레이어가 얻을 수 있는 최대 점수를 구하는 프로그램을 작성해 보자.

입력
첫 번째 줄에 정수가 적힌 카드의 수 N과 게임의 최대 턴 수 M이 공백으로 구분되어 주어진다.

두 번째 줄에 각 카드에 대해 플레이어의 패에 카드 쌍이 만들어질 때 얻을 수 있는 점수 A_1, A_2, \cdots, A_N이 공백으로 구분되어 주어진다.

출력
플레이어가 얻을 수 있는 최대 점수를 출력한다.

제한
1 \le N \le 1{,}000
1 \le M \le 1{,}000
-1{,}000 \le A_i \le 1{,}000
A_i는 정수이다.

예제 입력 1 
8 10
3 1 -6 -4 -5 9 -10 -1
예제 출력 1 
13
예제 입력 2 
5 3
3 1 2 4 1
예제 출력 2 
9
*/

#include <bits/stdc++.h>
using namespace std;
using ll = long long;

int main(){
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int N, M;
    cin >> N >> M;
    vector<ll> A(N);
    for(int i = 0; i < N; i++) 
        cin >> A[i];

    int K = min(M, (N + 1) / 2);

    sort(A.begin(), A.end(), greater<ll>());

    ll ans = 0;
    for(int i = 0; i < K; i++){
        if(A[i] > 0) ans += A[i];
        else break;
    }

    cout << ans << "\n";
    return 0;
}
